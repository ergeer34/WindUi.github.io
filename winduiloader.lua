--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=124,47,35,27,51,43,78,78,21,66,42,26,77,73,93,54,33,25,11,32,20,30,64,24,86,94,56,89,65,10,50,81,90,28,87,82,15,94,27,98,86,40,14,58,78,77,90,41,31,40 while u~=78 do if v<=777 then if v>=446 then if v>=639 then if v<=693 then if v<=639 then bf=(unpack or table.unpack)v=672 else if v>678 then bt={}v=721 else bu=tonumber v=693 end end else if v>=762 then if v>765 then bb={{0,1,2,3,4,g,6,7,8,9,10,11,12,13,14,15,},{n,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,p,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,k,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{i,9,10,11,12,13,14,15,0,1,2,3,4,5,6,c,},{9,8,11,10,13,12,15,14,1,0,3,2,j,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,b,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,t,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}v=810 else bg=bnfunction(b,c,c)return bt[bu(b,16)]end)v=777 end else v=762 do for b=0,255 do bt[b]=bx(b);end end end end else if v<=481 then if v<473 then v=481 be=select else v=524 bk=type end else if v>=571 then if v<592 then w=math.abs v=598 else y=math.floor v=639 end else v=571 ca=(function(b,c,c)if'number'==bk(b)then return true else return false end end)end end end else if v>=211 then if v>=305 then if v>=350 then if v<389 then bm=(getfenv or function()return _ENV end)v=397 else bs=setmetatable v=446 end else v=350 bq=math.ldexp end else if v<=211 then bj=string.rep v=226 else if v>228 then bz=table.insert v=305 else do ch=table.concat end v=270 end end end else if v<=76 then if v<68 then w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil v=76 else bo=string.byte v=104 end else if v<=104 then v=143 do bx=string.char end else if v>145 then v=211 bn=string.gsub else v=190 cd=string.sub end end end end end else if v>=1152 then if v>=1319 then if v<=1385 then if v>=1351 then if v<1381 then do ce={}end v=1385 else v=1428 do bp={}end end else by=function(b,c,c,c)local c,g,i,j,k,n,p,t=77,61,58,33,90,88,70,40,89,63,43,96,99,66,85,77,77,31,43,87,19,85,78,66,15,23 while c~=48 do if g>=384 then if g>=509 then if g<=526 then if g<523 then g=526 p[85]=k;else for c=1,bc()do i[c-1]=by();end g=548 end else if g<=548 then g=576 do p[67]=i;end else if g<605 then g=614 return p;else break end end end else if g>=448 then if g>452 then g=509 for c=1,bc()do local w,y,bj,bk,bn,bp=55,33,84,37,74,56,44,30,77,74,15,17,79,98,23,28,86,76,58,64,66,51,42,24,27,67 while w~=37 do if y>=351 then if y>=463 then if y>=526 then if y<=526 then y=560 bj[124]=-bj[30]else if y>565 then w=37;else y=603 k[c]=bj;end end else if y>468 then bj[169]=-bj[104]y=526 else do bj[181]=ba(bn,12,20);end y=484 end end else if y>=396 then if y>400 then y=463 bj[30]=ba(bn,21,29);else y=435 bj[144]=ba(bp,12,33);end else if y<363 then y=367 bj[80]=ba(bp,1,11);else y=396 bj[104]=ba(bn,3,11);end end end else if y<=138 then if y<=68 then if y>40 then y=112 bj={{},nil}else y=68 bj,bk,bn,bp=nil end else if y<133 then do bj[116]=bd();end y=138 else bj[140]={};y=182 end end else if y>=250 then if y>=265 then if y>268 then y=351 do bj[70]=bk end else bk=ba(bn,1,2)y=305 end else y=265 bp=bc()end else if y<200 then y=209 if not(bd()~=1)then for c=1,bd()do bj[140][c]={bd()==0,bc()}end end else y=250 bn=bc()end end end end end end else p[160]=n g=473 end else if g<420 then n={}g=424 else g=448 for c=1,j do local w,y,bj,bk=82,50,51,96,28,32,30,84,36,71,52,25,16 while w~=41 do if y>=167 then if y<=167 then y=185 if(4==bj)then do bk=(0~=bd());end elseif(not(bj~=2))then do bk=x();end elseif(0==bj)then bk=bi();elseif(3==bj)then bk=b[bi()];end;else if y<228 then y=233 n[c]=bk;else break end end else if y<=50 then y=95 bj,bk=nil else if y<135 then bj=bd()y=144 else bk=nil y=167 end end end end end end end end else if g>=222 then if g>=303 then if g>309 then g=384 j=bc()else p[148]=bd();g=346 end else if g>227 then for b=(#bv+1),(#bv+t)do local c,w,y,bj,bk=53,51,74,63,15,11,66,48,72,55,54,40,30,61,28,37,25,85,30,38,10,19 while c~=41 do if w>=339 then if w<=429 then if w>=406 then if w>408 then y[144]=ba(bk,12,33);w=463 else y[30]=ba(bj,21,29);w=429 end else if w>342 then y[21]=ba(bj,12,20);w=406 else y[q]=ba(bj,3,11);w=383 end end else if w<=491 then if w<486 then y[169]=-y[104]w=491 else w=539 do y[124]=-y[30]end end else if w>548 then break else w=554 bv[b]=y;end end end else if w<=139 then if w>=101 then if w>109 then w=182 bj=bc()else y[116]=bd();w=139 end else if w<71 then w=76 y,bj,bk=nil else w=101 y={}end end else if w>=260 then if w<292 then y[70]=ba(bj,1,2);w=298 else y[80]=ba(bk,1,11);w=339 end else if w<219 then bk=bc()w=225 else y[181]=bd();w=260 end end end end end end g=303 else t=bc()g=259 end end else if g<=110 then if g>67 then do k={}end g=155 else g=110 i,j,k,n,p,t=nil end else if g<188 then i={}g=196 else p={}g=222 end end end end end end v=1351 end else if v<=1428 then cb=function(b,c,g,i,i)local i,j,k,n,p k=b[67]do j=b[85]end p=ce n=b[148]i=b[160]return function(...)local b,p,q,t,w,y,bj,bk,bn t=1 do b=-1 end do w=-1 end bk={}bj={...}q=(be('#',...)-1)p={}y={}for w=s,q do if(not(w<n))then bk[(w-n)]=bj[(w+1)];else do y[w]=bj[(w+1)];end end;end;bn=(q-n+1)while true do local n,q,s,w,bj,bk,bn,bp,bq,bt s=j[t]bn=s[80]bj=s[116]bt=s[l]bq=s[21]n=s[30]bk=s[181]do q=s[169]end do bp=s[144]end w=s[124]if not(bn>29)then if not(bn<15)then if not(bn>21)then if not(s[80]<18)then do if not(bn<20)then if(bn>20)then local j,l j=s[104]l={}if(#p>0)then do for q=1,#p do local w w=p[q]for q=0,#w do local bj,bk,bq bq=w[q]bj=bq[1]bk=bq[2]if(bj==y and bk>=0)then l[bk]=bj[bk]bq[1]=l end end end end end return bf(y,j,b);else y[bt][i[s[144]]]=i[n];end else if(bn>18)then y[bt][i[bp]]=y[n];elseif((y[bt]<y[n]))then t=bp;end end end else if not(bn>15)then local j,l,q j=s[104]q=y[(j+2)]do l=(y[j]+q)end y[j]=l;do if((q>0))then if(not(l>y[j+1]))then t=bp;y[(j+3)]=l;end elseif(not(l<y[j+1]))then t=bp;do y[(j+3)]=l;end end end else if(bn>16)then do return y[bt]end else do y[bt]=y[bp][i[n]];end end end end else do if not(bn<26)then if not(bn>27)then if(bn<27)then do if y[s[30]]then y[bt]=y[n];t=bp;end;end else if(not(y[s[104]]~=i[n]))then do t=bp;end end;end else if(bn>28)then t=bp;else local j,l,q q=bt j={y[q](bf(y,q+1,bp))}l=0 for w=q,n do l=(l+1);y[w]=j[l];end end end else if not(bn>23)then if(bn<23)then if(not(y[bt]==y[s[30]]))then do t=bp;end end;else y[bt]={};end else if(bn<25)then y[bt]=(y[bp]+y[n]);else local j j=bt do y[j]=y[j](y[j+1]);end end end end end end else if not(bn<7)then if not(bn>10)then do if not(bn>8)then do if(bn>7)then do y[bt]=g[i[bp]];end else y[bt]=y[bp][y[n]];end end else if(bn<10)then if y[bt]then t=s[144];end;else do i=ce[bt](i)end end end end else if not(bn<13)then do if(bn<14)then y[bt]=(0~=s[144]);do t=(t+1);end else y[bt]=i[bp]end end else if 11==bn then y[bt]=(y[bp]*y[n]);else y[bt]=(y[bp]/i[n]);end end end else if not(bn<3)then if not(s[80]>4)then if not(bn~=3)then local j,l,q l=k[bp]q=nil j={}q=bs({},{__index=function(w,w)local w=j[w];return w[1][w[2]];end,__newindex=function(w,w,bj)local w=j[w]w[1][w[2]]=bj;end;});do for w=1,n do local bj bj=s[140][w]if bj[1]then j[(w-1)]={y,bj[2],nil,nil};else j[(w-1)]={c,bj[2],nil,nil};end;p[(#p+1)]=j;end;end y[bt]=cb(l,q,g);else local j,l,q,w,bj l=bt bj=s[30]do j=(l+2)end w={y[l](y[l+1],y[j])}for bk=1,bj do do y[(j+bk)]=w[bk]end end q=y[(l+3)]do if q then y[j]=q else t=s[144];end;end end else if 5==s[80]then if(not(y[bt]~=y[n]))then t=bp;end;elseif not y[n]then y[s[104]]=y[n];t=bp;end end else if not(bn<1)then if(bn<2)then y[bt]=cb(k[bp],nil,g);else y[s[104]]=(y[bp]*i[n]);end else local g do g=bt end y[g](y[(g+1)])end end end end else if not(bn<45)then if not(bn>51)then if not(bn<d)then if not(bn<50)then if not(bn~=50)then if(not(i[bt]>y[n]))then t=bp;end;else y[bt]=(y[bp]-y[n]);end else if(s[80]<49)then local d d=bt y[d]=y[d]();else local d,g,j d=bt do g=y[d]end do j=y[(d+2)]end if((j>0))then if((g>y[d+1]))then t=bp;else y[(d+3)]=g;end elseif((g<y[d+1]))then t=bp;else y[(d+3)]=g;end end end else do if not(bn<46)then if(bn<47)then y[bt]=y[bp];else local d,g,j do g=s[104]end d={y[g](y[g+1])}j=0 for k=g,s[r]do j=(j+1);y[k]=d[j];end end else local d do d=bt end do return y[d](bf(y,(d+1),bp))end;end end end else if not(bn<56)then if not(bn<f)then if 58==bn then while(y[bt]>=y[n])do t=s[144];break end else y[bt]=c[bp];end else if(bn>56)then local c c={}if(#p>0)then for d=1,#p do local f do f=p[d]end for d=0,#f do local g,j,k do g=f[d]end k=g[1]j=g[2]if(k==y and j>=0)then c[j]=k[j]g[1]=c end end end end return s[bt],y[bt];else while(i[bt]<y[n])do t=bp;break end end end else if not(bn>53)then if 52==s[80]then y[bt][y[bp]]=y[n];else if not y[bt]then t=bp;end;end else if(bn>54)then local c c=bt y[c](bf(y,(c+1),bp))else if(i[n]~=y[bt])then t=s[144];end;end end end end else if not(bn>36)then if not(bn>32)then if not(bn>30)then local c,d,f,g f=bt d,c=cf(y[f](y[(f+1)]))b=(c+f-1)g=0 do for c=f,b do g=(g+1);y[c]=d[g];end;end else if(bn<32)then local c c=bt y[c]=y[c](bf(y,c+1,b));else local c,d d=s[104]c=y[bp]y[(d+1)]=c;y[d]=c[i[n]];end end else if not(bn<35)then if(bn<36)then local c,d,f,g do f=bt end do d,c=cf(y[f](bf(y,(f+1),s[144])))end b=(c+f-1)g=a for a=f,b do g=(g+1);y[a]=d[g];end;else y[s[104]][y[bp]]=i[n];end else if(bn>33)then local a,c,d do c=bt end do d={y[c](bf(y,c+1,b))}end do a=0 end for b=c,n do a=(a+1);do y[b]=d[a];end end else local a,b do b=bt end do a={}end do while(#p>0)do for c=1,#p do local c=p[c]for d=0,#c do local c=c[d]local d=c[1]local f=c[2]if d==y and f>=0 then a[f]=d[f]c[1]=a end end end break end end do return y[b],y[(b+1)]end end end end else if not(bn>40)then do if not(bn>38)then if not(s[80]~=37)then local a,b,c c=bt b=y[c]a=bp do for d=1,a do do b[d]=y[(c+d)]end end;end else do y[bt]=(y[bp]+i[n]);end end else if not(bn~=39)then y[s[104]]=(y[bp]%i[n]);else local a,b do a=bp end b=y[a]for c=(a+1),n do b=(b..y[c]);end;y[bt]=b;end end end else if not(bn>42)then if(bn<42)then y[bt]=#y[bp];else local a a=s[104]y[a]=y[a](bf(y,a+1,bp));end else if(bn>m)then y[bt]=nil;else y[bt]=(0~=bp);end end end end end end t=(t+1);end;end;end v=1469 else if v<1483 then v=1486 return cb(by(bm()),{},bm())();else u=78;end end end else if v<=1194 then if v<1188 then bh=function()local a,b do a,b=bo(bg,cc,(cc+2))end cc=(cc+2);return((b*256)+a);end v=1194 else v=1225 x=function()local a,b,c,d,f,g,i,j=55,44,32,64,15,60,43,59,47,46,76,53,73,23,43,13,20,46 while a~=34 do if b>=202 then if b<=264 then if b>=226 then if b<258 then b=264 f=(br(0,d,20)*4294967296+j)else g=1 b=297 end else c=br(20,d,11)b=226 end else if b<=297 then b=333 if 0==c then do if not(f==0)then c=1 g=0 else return(i*0)end end elseif not(c==2047)then else do if 0==f then do return(i*(0/0))end else return(i*(1/0))end end end else if b<351 then b=355 return(i*(2^(c-1023))*(f/bl+g))else break end end end else if b<=81 then if b>51 then j=bc()b=105 else c,d,f,g,i,j=nil b=81 end else if b>=121 then if b>126 then i=((-o)^br(31,d,1))b=202 else b=153 if((j==0 and d==0))then return 0 end end else b=121 d=bc()end end end end end end else if v>=1255 then if v>1258 then do bv={}end v=1319 else v=1273 cf=function(...)return{...},be(e,...)end end else v=1255 bi=function(a,a,a)local a,b,c,d=58,68,93,34,92,66,39,92,44,27,25,60,81,95 while a~=39 do if b<=151 then if b>=107 then if b>115 then d=bg:sub(cc,(cc+c-1))b=183 else c=bc()b=151 end else b=107 c,d=nil end else if b<=183 then b=212 cc=(cc+c);else if b>220 then a=39;else b=234 return d;end end end end end end end end else if v<=947 then if v>=870 then if v<=870 then z={[0]=1}v=902 else if v>911 then for a=1,31 do z[a]=ci ci=(ci*2)end v=980 else ci=2 v=947 end end else if v>818 then v=870 bl=(2^52)else do bw=''end v=828 end end else if v>=1073 then if v<=1073 then v=1096 do cc=1 end else if v<1123 then v=1131 bc=function()local a,b,c,d c,b,a,d=bo(bg,cc,(cc+3))cc=(cc+4);return((d*16777216)+(a*65536)+(b*256)+c);end else bd=function()local a a=bo(bg,cc,cc)do cc=(cc+1);end return a;end v=1152 end end else if v>=1019 then if v<1032 then cg=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bb[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)v=1037 else v=1073 ba=function(a,b,c,d,d,d,d)local d d=((a/h^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end else br=function(a,b,c,d,d)local d,e,f=73,38,57,24,88,99,93,82,65,12,33,22,68 while d~=42 do if e>=119 then if e>=145 then if e>152 then d=42;else e=175 return f end else f=(f-f%1)e=145 end else if e>=84 then if e>90 then e=119 f=((b/z[a])%z[c])else e=104 do f=nil end end else f=nil e=84 end end end end v=1019 end end end end end end end)(0,2,7,48,'#',58,5,2,8,5,14,104,43,1,1,11,104,30,0,15)
